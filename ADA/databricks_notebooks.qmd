---
title: "DataBricks Notebooks"
---

------------------------------------------------------------------------

## Notebooks

------------------------------------------------------------------------

Notebooks are a special kind of script that DataBricks supports. They consist of code blocks and markdown blocks which can contain formatted text, links and images.

You can create a notebook in your workspace, either in a folder or a repository.\
To do this locate the folder/repository you want to create the notebook in then click the 'Create' button and select Notebook.

::: callout-tip
It's generally recommended that any notebooks used for core business processes are created in a repository linked to github/DevOps where they can be version controlled.
:::

Once you've created a notebook it will automatically open it.

You can change the title from 'Untitled Notebook *\<timestamp\>*', and set it's default language in the dropdown immediately to the right of the notebook title.

![](/images/ada-notebook.png)

The default language is the language the notebook will assume all code chunks are written in. In the screenshot above the default language is 'R', so all chunks will be assumed to be written in R unless otherwise specified.

You can also add markdown cells to add text, links and graphics to you notebook in order to document the processing done within it.

To add a new code of markdown chunk move the mouse above or below another chunk and the buttons '+Code' and '+Text' will appear.

![](/images/ada-notebook-add-chunk.png)

To run code chunks you'll first need to attach your compute resource to it by clicking the 'Connect' button in the top right hand side of the page.

![](/images/ada-notebook-attach.png)

You can run a code chunk either by pressing the play button in the top left corner of the chunk, or by pressing Ctrl + Return/Enter on the keyboard. Any outputs that result from the code will be displayed underneath the chunk.

![](/images/ada-notebook-chunk-output.png)

Everything ran in a notebook is in it's own 'session' meaning that later chunks have access to variables, functions, etc. that were defined above.

Notebooks cannot share a session with another Notebook so bear this in mind when constructing your workflows. If you need to pass data between notebooks it can be written out to a table in the unity catalog and accessed through that route.

Notebooks can be parameterised using '[widgets](https://docs.databricks.com/en/notebooks/widgets.html)', meaning a single notebook can be re-used with different inputs. This means they can be used in a similar way to a function in R/python or a stored procedure in SQL.
